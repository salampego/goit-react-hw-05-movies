{"version":3,"file":"static/js/681.a2e2e755.chunk.js","mappings":"uOAMe,SAASA,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAKR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAAII,MAAK,SAAAC,GAAG,OAAIN,EAAgBM,EAAIC,KAAKC,QAA7B,GAC/B,GAAE,CAACP,IAECF,EAGEA,EAAaU,OAAS,GAC3B,wBACGV,EAAaW,KAAI,YAA8B,IAA3BT,EAA0B,EAA1BA,GAAIU,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGX,EAKZ,OAGH,mEAdO,IAgBV,C,4MC5BKY,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAM,GAAD,OACbH,EADa,uCAC0BC,EAD1B,YADb,0GAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACQF,IAAM,KAAD,OAClBH,EADkB,iCACeC,EADf,iCAC+CI,EAD/C,gCADb,0GAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQJ,IAAM,GAAD,OACbH,EADa,kBACKO,EADL,oBACuBN,EADvB,oBADb,0GAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,iFACQJ,IAAM,GAAD,OAAIH,EAAJ,kBAAsBO,EAAtB,uEADb,0GAKA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCkB,GAAjC,iFACQN,IAAM,GAAD,OACbH,EADa,kBACKS,EADL,4BACgCR,EADhC,2BADb,0G","sources":["components/Reviews.jsx","service/API.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { fetchMovieReviews } from 'service/API';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { id } = useParams();\n  useEffect(() => {\n    fetchMovieReviews(id).then(res => setMovieReviews(res.data.results));\n  }, [id]);\n\n  if (!movieReviews) {\n    return null;\n  }\n  return movieReviews.length > 0 ? (\n    <ul>\n      {movieReviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <b>Author : {author}</b>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    <p>We don't have any review for this movie</p>\n  );\n}\n\nReviews.propTypes = {\n  movieReviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '60fcd2a553e98d3878a95d0ec6c21c9e';\n\nexport async function fetchMovieTrend() {\n  return await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n}\n\nexport async function fetchSearchMovie(movieName) {\n  return await axios(`\n${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=1&include_adult=false`);\n}\n\nexport async function fetchMovieMore(moveId) {\n  return await axios(\n    `${BASE_URL}/movie/${moveId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(moveId) {\n  return await axios(`${BASE_URL}/movie/${moveId}/credits?api_key=60fcd2a553e98d3878a95d0ec6c21c9e&language=en-US\n`);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Reviews","useState","movieReviews","setMovieReviews","id","useParams","useEffect","fetchMovieReviews","then","res","data","results","length","map","author","content","BASE_URL","API_KEY","fetchMovieTrend","axios","fetchSearchMovie","movieName","fetchMovieMore","moveId","fetchMovieCredits","movieId"],"sourceRoot":""}