{"version":3,"file":"static/js/756.f283dff4.chunk.js","mappings":"wOACA,GAAgB,UAAY,gCAAgC,UAAY,iC,SCKzD,SAASA,IAAgB,IAAD,YACrC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAKjB,IAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeL,GAAIM,MAAK,SAAAC,GAAG,OAAIR,EAASQ,EAAIC,KAAjB,GAC5B,GAAE,CAACR,KACCF,EACH,OAAO,KAET,IAAQW,EAAgEX,EAAhEW,YAAaC,EAAmDZ,EAAnDY,eAAgBC,EAAmCb,EAAnCa,aAAcC,EAAqBd,EAArBc,SAAUC,EAAWf,EAAXe,OAE7D,OACE,iCACE,SAAC,KAAD,CAAMC,GAAE,oBAAEZ,EAASa,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,mBAAQC,KAAK,SAAb,wBAEF,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,gBAAKD,UAAWC,EAAAA,IAAhB,UACE,gBACEC,IAAG,0CAAqCX,GACxCY,IAAKX,EACLY,MAAM,WAIV,iBAAKJ,UAAWC,EAAAA,UAAhB,WACE,uBAAIT,KACJ,yCAAiBa,KAAKC,MAAqB,GAAfb,GAA5B,QACA,qCACA,uBAAIC,KACJ,mCACA,uBACGC,EAAOY,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACb,MAAM,GAAN,OAAUA,EAAV,KACD,aAIP,2BACE,mDACA,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAOC,MAAO,CAAEC,KAAI,iBAAEd,QAAF,IAAEA,GAAF,UAAEA,EAAUa,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAxD,qBAIF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAI,iBAAEd,QAAF,IAAEA,GAAF,UAAEA,EAAUa,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAA3D,2BAKJ,SAAC,EAAAW,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,4MC9DKC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAM,GAAD,OACbH,EADa,uCAC0BC,EAD1B,YADb,0GAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACQF,IAAM,KAAD,OAClBH,EADkB,iCACeC,EADf,iCAC+CI,EAD/C,gCADb,0GAKA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAA8B8B,GAA9B,iFACQH,IAAM,GAAD,OACbH,EADa,kBACKM,EADL,oBACuBL,EADvB,oBADb,0GAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,iFACQH,IAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,uEADb,0GAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQN,IAAM,GAAD,OACbH,EADa,kBACKS,EADL,4BACgCR,EADhC,2BADb,0G","sources":["webpack://react-homework-template/./src/Pages/MovieDetails.module.css?40ae","Pages/MovieDetails.jsx","service/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__WJiF1\",\"movieMore\":\"MovieDetails_movieMore__rUJ5L\"};","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieMore } from 'service/API';\nimport s from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovieMore(id).then(res => setMovie(res.data));\n  }, [id]);\n  if (!movie) {\n    return null;\n  }\n  const { poster_path, original_title, vote_average, overview, genres } = movie;\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <button type=\"button\">Go back</button>\n      </Link>\n      <div className={s.container}>\n        <div className={s.img}>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={original_title}\n            width=\"200\"\n          />\n        </div>\n\n        <div className={s.movieMore}>\n          <b>{original_title}</b>\n          <p>User score : {Math.round(vote_average * 10)}%</p>\n          <b>Overview</b>\n          <p>{overview}</p>\n          <b>Genres</b>\n          <p>\n            {genres.map(({ name }) => {\n              return `${name}  `;\n            })}\n          </p>\n        </div>\n      </div>\n      <ul>\n        <b>Additional information</b>\n        <li>\n          <Link to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location?.state?.from ?? '/' }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string.isRequired,\n        })\n      ),\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '60fcd2a553e98d3878a95d0ec6c21c9e';\n\nexport async function fetchMovieTrend() {\n  return await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n}\n\nexport async function fetchSearchMovie(movieName) {\n  return await axios(`\n${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=1&include_adult=false`);\n}\n\nexport async function fetchMovieMore(moveId) {\n  return await axios(\n    `${BASE_URL}/movie/${moveId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(moveId) {\n  return await axios(`${BASE_URL}/movie/${moveId}/credits?api_key=60fcd2a553e98d3878a95d0ec6c21c9e&language=en-US\n`);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["MovieDetails","useState","movie","setMovie","id","useParams","location","useLocation","useEffect","fetchMovieMore","then","res","data","poster_path","original_title","vote_average","overview","genres","to","state","from","type","className","s","src","alt","width","Math","round","map","name","Suspense","fallback","BASE_URL","API_KEY","fetchMovieTrend","axios","fetchSearchMovie","movieName","moveId","fetchMovieCredits","fetchMovieReviews","movieId"],"sourceRoot":""}