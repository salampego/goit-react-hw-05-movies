{"version":3,"file":"static/js/597.e728fa6b.chunk.js","mappings":"iPAMe,SAASA,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAAII,MAAK,SAAAC,GAAG,OAAIN,EAAgBM,EAAIC,KAAKC,KAA7B,GAC/B,GAAE,CAACP,IAECF,GAKH,wBACGA,EAAaU,KAAI,YAAoD,IAAjDR,EAAgD,EAAhDA,GAAgD,IAA5CS,aAAAA,OAA4C,MAA7BC,EAA6B,EAAtBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnD,OACE,2BACE,gBACEC,IACEJ,EAAY,0CAC2BA,GACnCC,EAENI,IAAKH,EACLI,MAAM,SAER,wBAAKJ,KACL,uCAAeC,OAXRZ,EAcZ,MArBI,IAwBV,C,4MCrCKgB,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAM,GAAD,OACbH,EADa,uCAC0BC,EAD1B,YADb,0GAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACQF,IAAM,KAAD,OAClBH,EADkB,iCACeC,EADf,iCAC+CI,EAD/C,gCADb,0GAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQJ,IAAM,GAAD,OACbH,EADa,kBACKO,EADL,oBACuBN,EADvB,oBADb,0GAMA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAAiCoB,GAAjC,iFACQJ,IAAM,GAAD,OAAIH,EAAJ,kBAAsBO,EAAtB,uEADb,0GAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQN,IAAM,GAAD,OACbH,EADa,kBACKS,EADL,4BACgCR,EADhC,2BADb,0G","sources":["components/Cast.jsx","service/API.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'service/API';\nimport morph from '../images/unknow_actor.jpg';\nimport PropTypes from 'prop-types';\n\nexport default function Cast() {\n  const [movieCredits, setMovieCredits] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieCredits(id).then(res => setMovieCredits(res.data.cast));\n  }, [id]);\n\n  if (!movieCredits) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {movieCredits.map(({ id, profile_path = morph, name, character }) => {\n        return (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                  : morph\n              }\n              alt={name}\n              width=\"100\"\n            />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nCast.propTypes = {\n  movieCredits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '60fcd2a553e98d3878a95d0ec6c21c9e';\n\nexport async function fetchMovieTrend() {\n  return await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n}\n\nexport async function fetchSearchMovie(movieName) {\n  return await axios(`\n${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=1&include_adult=false`);\n}\n\nexport async function fetchMovieMore(moveId) {\n  return await axios(\n    `${BASE_URL}/movie/${moveId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(moveId) {\n  return await axios(`${BASE_URL}/movie/${moveId}/credits?api_key=60fcd2a553e98d3878a95d0ec6c21c9e&language=en-US\n`);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Cast","useState","movieCredits","setMovieCredits","id","useParams","useEffect","fetchMovieCredits","then","res","data","cast","map","profile_path","morph","name","character","src","alt","width","BASE_URL","API_KEY","fetchMovieTrend","axios","fetchSearchMovie","movieName","fetchMovieMore","moveId","fetchMovieReviews","movieId"],"sourceRoot":""}