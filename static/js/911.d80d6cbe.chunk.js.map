{"version":3,"file":"static/js/911.d80d6cbe.chunk.js","mappings":"wOACA,EAA4B,0BAA5B,EAA6D,qBAA7D,EAA8F,0BAA9F,EAAoI,0BAApI,EAA4K,4BAA5K,EAA+M,qBAA/M,EAA2O,qBAA3O,EAAuQ,qBAAvQ,EAA2S,6BAA3S,EAA+U,qB,SCIhU,SAASA,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACM,OAAVJ,IACFN,EAAeM,IACfK,EAAAA,EAAAA,IAAiBL,GAAOM,MAAK,SAAAC,GAAG,OAAIX,EAAUW,EAAIC,KAAKC,QAAvB,IAEnC,GAAE,CAACT,IAmBJ,OACE,+BACE,iBAAKU,UAAWC,EAAhB,WACE,kBAAMC,SApBK,SAAAC,GACfA,EAAEC,iBACyB,KAAvBrB,EAAYsB,SAIhBhB,EAAgB,SAAD,OAAUN,KAEzBY,EAAAA,EAAAA,IAAiBZ,GAAaa,MAAK,SAAAC,GACjCX,EAAUW,EAAIC,KAAKC,QACpB,IACF,EAS+BC,UAAWC,EAArC,WACE,mBAAQK,KAAK,SAASN,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,OAEnB,kBACEK,KAAK,OACLC,KAAK,YACLC,SAda,SAAAL,GACrBnB,EAAemB,EAAEM,cAAcC,MAChC,EAaSV,UAAWC,QAGf,eAAID,UAAWC,EAAf,SACGhB,GACCA,EAAO0B,KAAI,YAAwD,IAArDC,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,eAAgBC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC7C,OACE,eAAaf,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEe,GAAE,kBAAaJ,GACfZ,UAAWC,EACXgB,MAAO,CAAEC,KAAM1B,GAHjB,WAKE,gBACE2B,IAAG,UAnDP,mCAmDO,OAAeL,GAClBM,IAAKP,EACLQ,MAAM,SAER,gBAAIrB,UAAWC,EAAf,cAAiCY,MACjC,wBACE,kBAAMb,UAAWC,EAAjB,yBAA4Bc,EAA5B,aAbGH,EAkBZ,UAKZ,C,4MC5EKU,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAM,GAAD,OACbH,EADa,uCAC0BC,EAD1B,YADb,0GAMA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAAgC+B,GAAhC,iFACQD,IAAM,KAAD,OAClBH,EADkB,iCACeC,EADf,iCAC+CG,EAD/C,gCADb,0GAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQH,IAAM,GAAD,OACbH,EADa,kBACKM,EADL,oBACuBL,EADvB,oBADb,0GAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,iFACQH,IAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,uEADb,0GAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQN,IAAM,GAAD,OACbH,EADa,kBACKS,EADL,4BACgCR,EADhC,2BADb,0G","sources":["webpack://react-homework-template/./src/Pages/Movies/Movies.module.css?d262","Pages/Movies/Movies.jsx","service/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__dUnRL\",\"form\":\"Movies_form__gVl+9\",\"btnSubmit\":\"Movies_btnSubmit__6CMge\",\"searchBtn\":\"Movies_searchBtn__tjXEL\",\"searchInput\":\"Movies_searchInput__t20IP\",\"list\":\"Movies_list__YgDk6\",\"item\":\"Movies_item__VZWSJ\",\"link\":\"Movies_link__rzVI3\",\"movies_title\":\"Movies_movies_title__rBLFI\",\"rate\":\"Movies_rate__OimQb\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from 'service/API';\nimport s from './Movies.module.css';\n\nexport default function Movies() {\n  const [searchValue, setSearchValue] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n  const baseUrl = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    if (query !== null) {\n      setSearchValue(query);\n      fetchSearchMovie(query).then(res => setMovies(res.data.results));\n    }\n  }, [query]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (searchValue.trim() === '') {\n      return;\n    }\n\n    setSearchParams(`query=${searchValue}`);\n\n    fetchSearchMovie(searchValue).then(res => {\n      setMovies(res.data.results);\n    });\n  };\n\n  const onHandleChange = e => {\n    setSearchValue(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <div className={s.container}>\n        <form onSubmit={onSubmit} className={s.form}>\n          <button type=\"submit\" className={s.btnSubmit}>\n            <span className={s.searchBtn}></span>\n          </button>\n          <input\n            type=\"text\"\n            name=\"searchBar\"\n            onChange={onHandleChange}\n            className={s.searchInput}\n          />\n        </form>\n        <ul className={s.list}>\n          {movies &&\n            movies.map(({ id, original_title, poster_path, vote_average }) => {\n              return (\n                <li key={id} className={s.item}>\n                  <Link\n                    to={`/movies/${id}`}\n                    className={s.link}\n                    state={{ from: location }}\n                  >\n                    <img\n                      src={`${baseUrl}${poster_path}`}\n                      alt={original_title}\n                      width=\"200\"\n                    />\n                    <h2 className={s.movies_title}> {original_title}</h2>\n                    <p>\n                      <span className={s.rate}>⭐️{vote_average} </span>\n                    </p>\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '60fcd2a553e98d3878a95d0ec6c21c9e';\n\nexport async function fetchMovieTrend() {\n  return await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n}\n\nexport async function fetchSearchMovie(movieName) {\n  return await axios(`\n${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=1&include_adult=false`);\n}\n\nexport async function fetchMovieMore(moveId) {\n  return await axios(\n    `${BASE_URL}/movie/${moveId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(moveId) {\n  return await axios(`${BASE_URL}/movie/${moveId}/credits?api_key=60fcd2a553e98d3878a95d0ec6c21c9e&language=en-US\n`);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Movies","useState","searchValue","setSearchValue","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchSearchMovie","then","res","data","results","className","s","onSubmit","e","preventDefault","trim","type","name","onChange","currentTarget","value","map","id","original_title","poster_path","vote_average","to","state","from","src","alt","width","BASE_URL","API_KEY","fetchMovieTrend","axios","movieName","fetchMovieMore","moveId","fetchMovieCredits","fetchMovieReviews","movieId"],"sourceRoot":""}